package base;

import com.ftn.sbnz.model.patient.Patient;
import com.ftn.sbnz.model.procedure.Procedure;
import com.ftn.sbnz.model.procedure.PreOperative;

rule "Controlled DM by SIB"
    when
        $p: Patient( hasDiabetes == true)
        $proc: Procedure(patientId == $p.getId(), $preOp: preOperative)
        eval($preOp.getSIB() <= 8)
    then
        modify($p){
            setDMControlled(true);
        }
end

rule "Uncotrolled DM by SIB"
    when
        $p: Patient( hasDiabetes == true)
        $proc: Procedure(patientId == $p.getId(), $preOp: preOperative)
        eval($preOp.getSIB() > 8)
    then
        modify($p){
            setDMControlled(false);
        }
end

rule "Controlled DM by HbA1c"
    when
        $p: Patient( hasDiabetes == true)
        $proc: Procedure(patientId == $p.getId(), $preOp: preOperative)
        eval($preOp.getHBA1C() <= 7)
    then
        modify($p){
            setDMControlled(true);
        }
end

// CHECK
rule "Uncotrolled DM by HbA1c"
    when
        $p: Patient( hasDiabetes == true)
        $proc: Procedure(patientId == $p.getId(), $preOp: preOperative)
        eval($preOp.getHBA1C() > 7)
    then
        modify($p){
            setDMControlled(false);
        }
end

rule "Undiagnosed DM"
    when
        $p: Patient( hasDiabetes == false)
        $proc: Procedure(patientId == $p.getId(), $preOp: preOperative)
        eval($preOp.getSIB() > 6)
    then
        modify($preOp){
            setShouldContinueProcedure(false);
        }
end

// ASA Rules
rule "Classify ASA I"
    when
        $patient: Patient(
            !smokerOrAlcoholic,
            !hasDiabetes,
            !hadHearthAttack,
            !hasHearthFailure,
            !hasHypertension,
            !hadStroke,
            !hasRenalFailure,
            !addictions,
            !pregnant
        )
    then
        modify($patient){
            setAsa(Patient.ASA.I);
            }
end

rule "Classify ASA II"
    when
        $patient: Patient(
            (hasHypertension && controlledHypertension) || 
            (hasDiabetes && DMControlled) || 
            smokerOrAlcoholic || 
            pregnant || 
            (BMI >= 30 && BMI < 40)
        )
    then
        modify($patient){
            setAsa(Patient.ASA.II);
            }
end

rule "Classify ASA III"
    no-loop
    when
        $patient: Patient(
            (asa != Patient.ASA.IV) &&
            (
                (hasHypertension && !controlledHypertension) || 
                (hasDiabetes && !DMControlled) || 
                BMI >= 40 || 
                addictions
            ) 
        )
    then
        modify($patient){
            setAsa(Patient.ASA.III);
            }
end

rule "Classify ASA IV"
    when
        $patient: Patient(
            hadHearthAttack || 
            hadStroke || 
            hasHearthFailure || 
            hasRenalFailure 
        )
    then
        modify($patient){
            setAsa(Patient.ASA.IV);
            }
end
