package cep;

import com.ftn.sbnz.model.patient.Patient;
import com.ftn.sbnz.model.procedure.Procedure;
import com.ftn.sbnz.model.events.HeartBeatEvent;
import com.ftn.sbnz.model.events.SAPEvent;
import com.ftn.sbnz.model.events.BreathEvent;
import com.ftn.sbnz.model.events.PulseOximetryEvent;

import com.ftn.cbnz.model.events.SymptomEvent;


declare Alarm
    patientId: Long
    doctorId: Long
    message: String
end

declare VasopressorIV
    @role(event)
    @expires(16m)
    patientId: Long
end


rule "exstrasystole rule"
    when
        $patient : Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($count : intValue) from accumulate(
            $exs: SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Exstrasystole)
            over window: time(5m), count($exs)
        )
        eval($count >= 25)
    then
        //предиктор срчаних компликација, алармирај лекара
        insert(new Alarm($id, $doctorId, "Detected more than 25 exstrasystoles in 5 minutes. Cardiovascular complications are possible."));
end

rule "tachycardia rule"
    when
        $patient: Patient($id: id)
        Number($count : intValue) from accumulate(
            $heartBeat: HeartBeatEvent(patientId == $id)
            over window: time(1m), count($heartBeat)
        )
        eval($count > 80)
    then
        //tahikardija
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Tachycardia));
end

rule "tachycardia alarm"
    when 
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        exists(SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Tachycardia))
    then
        insert(new Alarm($id, $doctorId, "Detected tachycardia."));
end

rule "bradycardia rule"
    when
        $patient: Patient($id: id)
        Number($count : intValue) from accumulate(
            $heartBeat: HeartBeatEvent(patientId == $id)
            over window: time(1m), count($heartBeat)
        )
        eval($count < 60)
    then
        //bradikardija
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Bradycardia));    
end

rule "bradycardia alarm"
    when 
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        exists(SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Bradycardia))
    then
        insert(new Alarm($id, $doctorId, "Detected bradycardia."));
end

rule "hypertension rule"
    when
        $patient: Patient($id: id, $basalSAP: basalSAP)
        Number($count : doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id) over window: time(5m), average($sap.getValue())
        )
        eval($count > 130 || $count > ($basalSAP * 1.2))
    then
        //hipertenzija
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Hypertension));
end

rule "hypertension alarm rule"
    when
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        exists(SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Hypertension))
    then
        insert(new Alarm($id, $doctorId, "Detected hypertension."));
end

rule "hypotension rule"
    when
        $patient: Patient($id: id)
        Number($averageVal : doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id)
            over window: time(5m), average($sap.getValue())
        )
        eval($averageVal < 80 || ($averageVal < ($patient.getBasalSAP() * 0.8)))
    then
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Hypotension));
end

rule "hypotension alarm rule"
    when
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($count: intValue) from accumulate(
            $hypotension: SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Hypotension) over window: time(10m), count($hypotension)
        )
        eval($count == 2)
    then
        insert(new Alarm($id, $doctorId, "Detected hypotension. Cardiovascular complications are possible."));
end


// Post op
rule "Post op SAP - Crystalloids"
    when
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($averageVal: doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id) over window: time(5m), average($sap.getValue())
        )
        eval($averageVal < ($patient.getBasalSAP() - 20) && $averageVal > ($patient.getBasalSAP() - 50))
    then
        System.out.println("Patient " + $patient.getFullname() + ": Initiate IV crystalloids and alert anesthesiologist.");
        insert(new Alarm($id, $doctorId, "Initiate IV crystalloids and alert anesthesiologist."));
       
end

rule "Post op SAP - Vasopressors Infusion"
    when
        $patient: Patient($id: id, $basalSAP: basalSAP)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($averageVal: doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id) over window: time(5m), average($sap.getValue())
        )
        eval($averageVal <= ($basalSAP - 50))
    then
        System.out.println("Patient " + $patient.getFullname() + ": Start vasopressors infusion.");
        insert(new Alarm($id, $doctorId, "Start vasopressors infusion."));
        insert(new VasopressorIV($id));
        
end

rule "Post op SAP - Vasopressors IV still low"
    when
        $patient: Patient($id: id, $basalSAP: basalSAP)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        $vasopressorIV: VasopressorIV(patientId == $id)
        $SAPEvent: SAPEvent(this after[15m] $vasopressorIV, patientId == $id, value <= ($basalSAP - 50))
    then
        System.out.println("Patient " + $patient.getFullname() + ": determine hemoglobin.");
        insert(new Alarm($id, $doctorId, "Determine hemoglobin."));
end

rule "Hemoglobin results"
    when 
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId, postOperative.getHemoglobin() < 70 && postOperative.getHemoglobin() > 0)
    then
        System.out.println("Patient " + $patient.getFullname() + ": give blood transfusion.");
        insert(new Alarm($id, $doctorId, "Give patient blood transfusion."));
end

rule "Post op SAP - Inc"
    when
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($averageVal: doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id) over window: time(5m), average($sap.getValue())
        )
        eval($averageVal >= ($patient.getBasalSAP() + 20) && $averageVal <= ($patient.getBasalSAP() + 50))
    then
        System.out.println("Patient " + $patient.getFullname() + ": бол, делиријум, мучнина и повраћање, плитко дисање.");
        insert(new Alarm($id, $doctorId, "Determine if has pain, delirium, nausea and vomiting or shallow breathing."));
        // Todo add alert
end

rule "Post op SAP - Inc 50"
    when
        $patient: Patient($id: id, $basalSAP: basalSAP)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        Number($averageVal: doubleValue) from accumulate(
            $sap: SAPEvent(patientId == $id) over window: time(5m), average($sap.getValue())
        )
        eval($averageVal >= ($basalSAP + 50))
    then
        System.out.println("Patient " + $patient.getFullname() + ": give hypertensive.");
        insert(new Alarm($id, $doctorId, "Give patient hypertensive."));
        // Todo add alert
end

rule "hypoxemia rule"
    when
        $patient: Patient($id: id)
        Number($count : doubleValue) from accumulate(
            $pulseOximetry: PulseOximetryEvent(patientId == $id)
            over window: time(5m), average($pulseOximetry.getValue())
        )
        eval($count < 92.0)
    then
        System.out.println("Hypoxemia detected.");
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Hypoxemia));
end

rule "hypoxemia alarm rule"
    when 
        $patient: Patient($id: id)
        $procedure: Procedure(patientId == $id, $doctorId: medicalStaffId)
        exists(SymptomEvent(patientId == $id, symptom == SymptomEvent.Symptom.Hypoxemia))
        Number($count : doubleValue) from accumulate(
            $pulseOximetry: PulseOximetryEvent(patientId == $id)
            over window: time(5m), average($pulseOximetry.getValue())
        )
        eval($count < 90.0)
    then
        insert(new Alarm($id, $doctorId, "Connect patient to ventilator."));
end

rule "cyanosis rule"
    when 
        $patient: Patient($id: id)
        Number($count : doubleValue) from accumulate(
            $pulseOximetry: PulseOximetryEvent(patientId == $id)
            over window: time(5m), average($pulseOximetry.getValue())  
        )
        eval($count < 67.0)
    then
        System.out.println("Cyanosis detected.");
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Cyanosis));
end

rule "Breath frequency - tachypnea"
    when
        $patient: Patient($id: id)
        Number($count: intValue) from accumulate(
            $e: BreathEvent(patientId == $id)
            over window: time(1m), count($e)
        )
        eval($count > 20)
    then
        System.out.println("Patient " + $patient.getFullname() + ": Tachypnea detected.");
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Tachypnea));
end

rule "Breath frequency - bradypnea"
    when
        $patient: Patient($id: id)
        Number($count: intValue) from accumulate(
            $e: BreathEvent(patientId == $id)
            over window: time(1m), count($e)
        )
        eval($count < 12)
    then
        System.out.println("Patient " + $patient.getFullname() + ": Bradypnea detected.");
        insert(new SymptomEvent($id, SymptomEvent.Symptom.Bradypnea));
end
